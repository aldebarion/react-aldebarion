@import "~styles/themes";
@import "~styles/transitions";

.AdInput {

  display: flex;
  align-items: stretch;
  justify-content: flex-start;
  box-sizing: border-box;
  overflow: hidden;

  @include apparitionTransition;
  opacity: 1;

  $width: 300px;


  @each $theme in $themes {
    &.#{$theme} {
      &:not(.disabled) {
        border: $borderWidth solid foreground($theme);
      }

      &.disabled {
        border: $borderWidth solid foregroundHue1($theme);
      }
    }
  }

  &.disabled {
    cursor: not-allowed;
  }

  width: 0px;
  height: 0px;

  &.showHeight {
    height: $height;
  }

  &.showWidth {
    width: $width;
  }

  .minLeft {
    flex: 0 0 $horizontalPadding;
  }

  .prefixLeft, .left {
    display: flex;
    align-items: center;
    justify-content: center;

    @each $theme in $themes {
      &.#{$theme} {
        // color: background($theme);
        &:not(.disabled) {
          color: foreground($theme);
        }

        &.disabled {
          color: foregroundHue1($theme);
        }

      }
    }
  }

  .prefixLeft {
    flex: 0 0 auto;
    padding: 0px 2px 0px $horizontalPadding;
    font-size: 0.9em;
  }

  .left {
    flex: 0 0 40px;

    .icon {
      color: inherit;
      font-size: 20px;
    }
  }


  .right {
    box-sizing: content-box;
    flex: 0 0 auto;
    position: relative;

    border: none;
    outline: none;
    padding: 0;
    overflow: hidden;


    &.button {
      &:disabled {
        cursor: not-allowed;
      }

      &:not(.submitted):not(:disabled) {
        cursor: pointer;
      }
    }

    opacity: 0;
    @include apparitionTransition;

    &.show {
      opacity: 1;
    }

    @each $theme in $themes {
      &.#{$theme} {
        @include interactionTransition;
        background: transparent;

        $disabledColor: foregroundHue1($theme);
        $defaultColor: foreground($theme);

        &.disabled, &:disabled {
          color: $disabledColor;
        }

        &:not(.disabled):not(.button) {
          color: $defaultColor;
        }

        &.button {
          &:disabled {
            border-left: $borderWidth solid $disabledColor;
          }

          &:not(:disabled) {
            border-left: $borderWidth solid $defaultColor;
            &:not(:hover) {
              color: $defaultColor;
            }

            &:hover, &.submitted {
              background: $defaultColor;
              color: background($theme);
            }
          }
        }
      }
    }

    .indicator {
      $rightWidth: $height - 2 * $borderWidth;
      width: $rightWidth;
      color: inherit;
      font-size: 20px;
      height: $rightWidth;
    }
  }

  .input {
    background: transparent;
    outline: none;
    border: none;
    padding: 9px $horizontalPadding 9px 0px;

    display: block;
    width: 100%;
    flex: 1 1 auto;
    font-size: 0.9em;

    &:disabled {
      cursor: not-allowed;
    }

    @each $theme in $themes {
      &.#{$theme} {
        &:not(:disabled) {
          color: foreground($theme);
        }
        &:disabled {
          color: foregroundHue1($theme);
        }

        font-family: defaultFontFamily($theme);
        -webkit-font-smoothing: antialiased!important;
        -moz-osx-font-smoothing: grayscale!important;
        font-weight: defaultFontWeight($theme);
      }
    }

    opacity: 0;
    @include apparitionTransition;

    &.showInput {
      opacity: 1;
    }
  }
}
